### YamlMime:ManagedReference
items:
- uid: TorchSharp.FloatTensor.FloatStorage
  id: FloatTensor.FloatStorage
  children:
  - TorchSharp.FloatTensor.FloatStorage.#ctor
  - TorchSharp.FloatTensor.FloatStorage.#ctor(System.Int64)
  - TorchSharp.FloatTensor.FloatStorage.Dispose
  - TorchSharp.FloatTensor.FloatStorage.Dispose(System.Boolean)
  - TorchSharp.FloatTensor.FloatStorage.Fill(System.Single)
  - TorchSharp.FloatTensor.FloatStorage.Finalize
  - TorchSharp.FloatTensor.FloatStorage.Item(System.Int64)
  - TorchSharp.FloatTensor.FloatStorage.Resize(System.UInt64)
  langs:
  - csharp
  name: FloatTensor.FloatStorage
  nameWithType: FloatTensor.FloatStorage
  fullName: TorchSharp.FloatTensor.FloatStorage
  type: Class
  assemblies:
  - TorchSharp
  namespace: TorchSharp
  summary: The storage class provides a mechanism to access the underlying data representation for tensors.
  syntax:
    content: 'public class FloatTensor.FloatStorage : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
- uid: TorchSharp.FloatTensor.FloatStorage.#ctor
  id: '#ctor'
  parent: TorchSharp.FloatTensor.FloatStorage
  langs:
  - csharp
  name: FloatTensor.FloatStorage()
  nameWithType: FloatTensor.FloatStorage.FloatTensor.FloatStorage()
  fullName: FloatTensor.FloatStorage.FloatTensor.FloatStorage()
  type: Constructor
  assemblies:
  - TorchSharp
  namespace: TorchSharp
  summary: Initializes an empty FloatStorage instance.
  syntax:
    content: public FloatStorage ();
    parameters: []
  overload: TorchSharp.FloatTensor.FloatStorage.#ctor*
  exceptions: []
- uid: TorchSharp.FloatTensor.FloatStorage.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: TorchSharp.FloatTensor.FloatStorage
  langs:
  - csharp
  name: FloatTensor.FloatStorage(Int64)
  nameWithType: FloatTensor.FloatStorage.FloatTensor.FloatStorage(Int64)
  fullName: FloatTensor.FloatStorage.FloatTensor.FloatStorage(Int64)
  type: Constructor
  assemblies:
  - TorchSharp
  namespace: TorchSharp
  summary: Initializes a FloatStorage instance with the specified size.
  syntax:
    content: public FloatStorage (long size);
    parameters:
    - id: size
      type: System.Int64
      description: The desired number of elements in the storage
  overload: TorchSharp.FloatTensor.FloatStorage.#ctor*
  exceptions: []
- uid: TorchSharp.FloatTensor.FloatStorage.Dispose
  id: Dispose
  parent: TorchSharp.FloatTensor.FloatStorage
  langs:
  - csharp
  name: Dispose()
  nameWithType: FloatTensor.FloatStorage.Dispose()
  fullName: FloatTensor.FloatStorage.Dispose()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp
  summary: Releases the storage.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: TorchSharp.FloatTensor.FloatStorage.Dispose*
  exceptions: []
- uid: TorchSharp.FloatTensor.FloatStorage.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: TorchSharp.FloatTensor.FloatStorage
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: FloatTensor.FloatStorage.Dispose(Boolean)
  fullName: FloatTensor.FloatStorage.Dispose(Boolean)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp
  summary: Implements the .NET Dispose pattern.
  syntax:
    content: protected void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  overload: TorchSharp.FloatTensor.FloatStorage.Dispose*
  exceptions: []
- uid: TorchSharp.FloatTensor.FloatStorage.Fill(System.Single)
  id: Fill(System.Single)
  parent: TorchSharp.FloatTensor.FloatStorage
  langs:
  - csharp
  name: Fill(Single)
  nameWithType: FloatTensor.FloatStorage.Fill(Single)
  fullName: FloatTensor.FloatStorage.Fill(Single)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp
  summary: Fills every element of the storage with the specified value.
  syntax:
    content: public void Fill (float value);
    parameters:
    - id: value
      type: System.Single
      description: Value used for each element
  overload: TorchSharp.FloatTensor.FloatStorage.Fill*
  exceptions: []
- uid: TorchSharp.FloatTensor.FloatStorage.Finalize
  id: Finalize
  parent: TorchSharp.FloatTensor.FloatStorage
  langs:
  - csharp
  name: Finalize()
  nameWithType: FloatTensor.FloatStorage.Finalize()
  fullName: FloatTensor.FloatStorage.Finalize()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp
  summary: Finalizer
  syntax:
    content: ~FloatStorage ();
    parameters: []
  overload: TorchSharp.FloatTensor.FloatStorage.Finalize*
  exceptions: []
- uid: TorchSharp.FloatTensor.FloatStorage.Item(System.Int64)
  id: Item(System.Int64)
  parent: TorchSharp.FloatTensor.FloatStorage
  langs:
  - csharp
  name: Item(Int64)
  nameWithType: FloatTensor.FloatStorage.Item(Int64)
  fullName: FloatTensor.FloatStorage.Item(Int64)
  type: Property
  assemblies:
  - TorchSharp
  namespace: TorchSharp
  syntax:
    content: public float this[long index] { get; set; }
    parameters:
    - id: index
      type: System.Int64
      description: To be added.
    return:
      type: System.Single
      description: To be added.
  overload: TorchSharp.FloatTensor.FloatStorage.Item*
  exceptions: []
- uid: TorchSharp.FloatTensor.FloatStorage.Resize(System.UInt64)
  id: Resize(System.UInt64)
  parent: TorchSharp.FloatTensor.FloatStorage
  langs:
  - csharp
  name: Resize(UInt64)
  nameWithType: FloatTensor.FloatStorage.Resize(UInt64)
  fullName: FloatTensor.FloatStorage.Resize(UInt64)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp
  summary: Changes the size of this storage to the new requested size.
  syntax:
    content: public void Resize (ulong size);
    parameters:
    - id: size
      type: System.UInt64
      description: The desired new size.
  overload: TorchSharp.FloatTensor.FloatStorage.Resize*
  exceptions: []
references:
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TorchSharp.FloatTensor.FloatStorage.#ctor
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: FloatTensor.FloatStorage()
  nameWithType: FloatTensor.FloatStorage.FloatTensor.FloatStorage()
  fullName: FloatTensor.FloatStorage.FloatTensor.FloatStorage()
- uid: TorchSharp.FloatTensor.FloatStorage.#ctor(System.Int64)
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: FloatTensor.FloatStorage(Int64)
  nameWithType: FloatTensor.FloatStorage.FloatTensor.FloatStorage(Int64)
  fullName: FloatTensor.FloatStorage.FloatTensor.FloatStorage(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: TorchSharp.FloatTensor.FloatStorage.Dispose
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: Dispose()
  nameWithType: FloatTensor.FloatStorage.Dispose()
  fullName: FloatTensor.FloatStorage.Dispose()
- uid: TorchSharp.FloatTensor.FloatStorage.Dispose(System.Boolean)
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: FloatTensor.FloatStorage.Dispose(Boolean)
  fullName: FloatTensor.FloatStorage.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TorchSharp.FloatTensor.FloatStorage.Fill(System.Single)
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: Fill(Single)
  nameWithType: FloatTensor.FloatStorage.Fill(Single)
  fullName: FloatTensor.FloatStorage.Fill(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TorchSharp.FloatTensor.FloatStorage.Finalize
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: Finalize()
  nameWithType: FloatTensor.FloatStorage.Finalize()
  fullName: FloatTensor.FloatStorage.Finalize()
- uid: TorchSharp.FloatTensor.FloatStorage.Item(System.Int64)
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: Item(Int64)
  nameWithType: FloatTensor.FloatStorage.Item(Int64)
  fullName: FloatTensor.FloatStorage.Item(Int64)
- uid: TorchSharp.FloatTensor.FloatStorage.Resize(System.UInt64)
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: Resize(UInt64)
  nameWithType: FloatTensor.FloatStorage.Resize(UInt64)
  fullName: FloatTensor.FloatStorage.Resize(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: TorchSharp.FloatTensor.FloatStorage.#ctor*
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: FloatTensor.FloatStorage
  nameWithType: FloatTensor.FloatStorage.FloatTensor.FloatStorage
  fullName: FloatTensor.FloatStorage.FloatTensor.FloatStorage
- uid: TorchSharp.FloatTensor.FloatStorage.Dispose*
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: Dispose
  nameWithType: FloatTensor.FloatStorage.Dispose
  fullName: FloatTensor.FloatStorage.Dispose
- uid: TorchSharp.FloatTensor.FloatStorage.Fill*
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: Fill
  nameWithType: FloatTensor.FloatStorage.Fill
  fullName: FloatTensor.FloatStorage.Fill
- uid: TorchSharp.FloatTensor.FloatStorage.Finalize*
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: Finalize
  nameWithType: FloatTensor.FloatStorage.Finalize
  fullName: FloatTensor.FloatStorage.Finalize
- uid: TorchSharp.FloatTensor.FloatStorage.Item*
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: Item
  nameWithType: FloatTensor.FloatStorage.Item
  fullName: FloatTensor.FloatStorage.Item
- uid: TorchSharp.FloatTensor.FloatStorage.Resize*
  parent: TorchSharp.FloatTensor.FloatStorage
  isExternal: false
  name: Resize
  nameWithType: FloatTensor.FloatStorage.Resize
  fullName: FloatTensor.FloatStorage.Resize
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
