<Type Name="Init" FullName="TorchSharp.NN.Init">
  <TypeSignature Language="C#" Value="public static class Init" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Init extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>TorchSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CalculateFanInAndFanOut&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;long,long&gt; CalculateFanInAndFanOut&lt;T&gt; (TorchSharp.Tensor.TorchTensor tensor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;int64, int64&gt; CalculateFanInAndFanOut&lt;T&gt;(valuetype TorchSharp.Tensor.TorchTensor tensor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Int64,System.Int64&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tensor" Type="TorchSharp.Tensor.TorchTensor" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="tensor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KaimingUniform">
      <MemberSignature Language="C#" Value="public static void KaimingUniform (TorchSharp.Tensor.TorchTensor tensor, double a = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void KaimingUniform(valuetype TorchSharp.Tensor.TorchTensor tensor, float64 a) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tensor" Type="TorchSharp.Tensor.TorchTensor" />
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="tensor">To be added.</param>
        <param name="a">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform">
      <MemberSignature Language="C#" Value="public static void Uniform (TorchSharp.Tensor.TorchTensor tensor, double low = 0, double high = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform(valuetype TorchSharp.Tensor.TorchTensor tensor, float64 low, float64 high) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tensor" Type="TorchSharp.Tensor.TorchTensor" />
        <Parameter Name="low" Type="System.Double" />
        <Parameter Name="high" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="tensor">To be added.</param>
        <param name="low">To be added.</param>
        <param name="high">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
